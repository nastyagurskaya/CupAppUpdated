@model CupApp.Models.Cup

@{
    ViewBag.Title = "AddOrEdit";
    Layout = null;
}

@using (Html.BeginForm("AddOrEditCup", "Cups", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_restUrl = Url.Action("AddOrEdit", "Cups", new { id = 0 }) }))
{
@*<form method="post" asp-action="AddOrEdit" enctype = "multipart/form-data" onsubmit="jQueryAjaxPost('/Cups/AddOrEdit') data_restUrl = Url.Action("AddOrEdit", "Cups", new { id = 0 })">*@
    <div class="row">
        @Html.AntiForgeryToken()
        <hr />
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CupId)
            <div class="form-group">
                @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CupType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="btn-group btn-group-toggle" data-toggle="buttons">
                    @{
                        int counter = 0;}
                    @foreach (var value in @CupApp.TagHelpers.EnumHelper<CupType>.GetNames(CupType.tea))
                    {
                        <label class="btn btn-secondary active">
                            <input asp-for="CupType" type="radio" value="@value"> @value
                        </label>
                        <span asp-validation-for="CupType" class="text-danger"></span>
                        counter++;
                    }
                </div>
                @*<select asp-for="CupType" class="form-control" asp-items="Html.GetEnumSelectList<CupType>()">
                        <option selected="selected" value="">Please select</option>
                    </select>
                    <span asp-validation-for="CupType" class="text-danger"></span>*@
            </div>
            @Html.ValidationMessageFor(model => model.CupType, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CountryID, "CountryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.ImageUpload, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                   <img src="@Url.Action("GetImage", new { id = Model.CupId })" style="margin:10px" height="180" width="180" id="imagePreview" />
                    <input asp-for="ImageUpload" type="file" accept="image/jpeg, image/png" onchange="ShowImagePreview(this,document.getElementById('imagePreview'))" />
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                @if (Model.CupId != 0)
                {
                    <a class="btn btn-success" onclick="refreshAddNewTab('@Url.Action("AddOrEdit","Cups",new{id=0})',false)"><i class="fa fa-plus"></i> Add New</a>
                }
            </div>
        </div>
    </div>
    }
@*</form>*@